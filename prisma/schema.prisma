generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model player {
  player_id                                          Int                     @id @default(autoincrement())
  from                                               Int?
  to                                                 Int?
  pos                                                String?
  ht                                                 Int?
  wt                                                 Decimal?                @db.Decimal(10, 3)
  birth_date                                         DateTime?               @db.Date
  colleges                                           String?                 @db.VarChar(200)
  player_name                                        String                  @db.VarChar(100)
  individual_awards                                  individual_awards?
  player_career_avg                                  player_career_avg[]
  player_stats_advanced                              player_stats_advanced[]
  player_stats_per_game                              player_stats_per_game[]
  player_stats_per_poss                              player_stats_per_poss[]
  player_stats_totals                                player_stats_totals[]
  team_selection_team_selection_player_fiveToplayer  team_selection[]        @relation("team_selection_player_fiveToplayer")
  team_selection_team_selection_player_fourToplayer  team_selection[]        @relation("team_selection_player_fourToplayer")
  team_selection_team_selection_player_oneToplayer   team_selection[]        @relation("team_selection_player_oneToplayer")
  team_selection_team_selection_player_sixToplayer   team_selection[]        @relation("team_selection_player_sixToplayer")
  team_selection_team_selection_player_threeToplayer team_selection[]        @relation("team_selection_player_threeToplayer")
  team_selection_team_selection_player_twoToplayer   team_selection[]        @relation("team_selection_player_twoToplayer")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model individual_awards {
  player_name  String?
  lg           String?
  mvp_count    Int?
  mvp_seasons  String?
  roy_season   String?
  dpoy_count   Int?
  dpoy_seasons String?
  mip_count    Int?
  mip_seasons  String?
  smoy_count   Int?
  smoy_seasons String?
  fmvp_count   Int?
  fmvp_seasons String?
  player_id    Int     @id
  player       player  @relation(fields: [player_id], references: [player_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model player_stats_advanced {
  player_id   Int
  player_name String?
  pos         String?
  age         Int?
  tm          String
  g           Int?
  mp          Int?
  per         Decimal? @db.Decimal(10, 3)
  ts_percent  Decimal? @db.Decimal(10, 3)
  par         Decimal? @db.Decimal(10, 3)
  ftr         Decimal? @db.Decimal(10, 3)
  orb_percent Decimal? @db.Decimal(10, 3)
  drb_percent Decimal? @db.Decimal(10, 3)
  trb_percent Decimal? @db.Decimal(10, 3)
  ast_percent Decimal? @db.Decimal(10, 3)
  stl_percent Decimal? @db.Decimal(10, 3)
  blk_percent Decimal? @db.Decimal(10, 3)
  tov_percent Decimal? @db.Decimal(10, 3)
  usg_percent Decimal? @db.Decimal(10, 3)
  ows         Decimal? @db.Decimal(10, 3)
  dws         Decimal? @db.Decimal(10, 3)
  ws          Decimal? @db.Decimal(10, 3)
  ws_48       Decimal? @db.Decimal(10, 3)
  obpm        Decimal? @db.Decimal(10, 3)
  dbpm        Decimal? @db.Decimal(10, 3)
  bpm         Decimal? @db.Decimal(10, 3)
  vorp        Decimal? @db.Decimal(10, 3)
  year        Int
  playoffs_s  String   @db.VarChar
  player      player   @relation(fields: [player_id], references: [player_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([player_id, tm, year, playoffs_s])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model player_stats_per_game {
  player_id     Int
  pos           String?
  age           Int?
  tm            String
  games         Int?
  gs            Int?
  mp            Int?
  fg            Decimal? @db.Decimal(10, 3)
  fga           Decimal? @db.Decimal(10, 3)
  fg_percent    Decimal? @db.Decimal(10, 3)
  threeP        Decimal? @db.Decimal(10, 3)
  threePA       Decimal? @db.Decimal(10, 3)
  three_percent Decimal? @db.Decimal(10, 3)
  twoP          Decimal? @db.Decimal(10, 3)
  twoPA         Decimal? @db.Decimal(10, 3)
  two_percent   Decimal? @db.Decimal(10, 3)
  eFG_percent   Decimal? @db.Decimal(10, 3)
  ft            Decimal? @db.Decimal(10, 3)
  fta           Decimal? @db.Decimal(10, 3)
  ft_percent    Decimal? @db.Decimal(10, 3)
  orb           Decimal? @db.Decimal(10, 3)
  drb           Decimal? @db.Decimal(10, 3)
  trb           Decimal? @db.Decimal(10, 3)
  ast           Decimal? @db.Decimal(10, 3)
  stl           Decimal? @db.Decimal(10, 3)
  blk           Decimal? @db.Decimal(10, 3)
  tov           Decimal? @db.Decimal(10, 3)
  pf            Decimal? @db.Decimal(10, 3)
  pts           Decimal? @db.Decimal(10, 3)
  year          Int
  playoffs_s    String   @db.VarChar
  player_name   String?
  player        player   @relation(fields: [player_id], references: [player_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([player_id, tm, year, playoffs_s])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model player_stats_per_poss {
  player_id     Int
  player_name   String?
  pos           String?
  age           Int?
  tm            String
  games         Int?
  gs            Int?
  mp            Int?
  fg            Decimal? @db.Decimal(10, 3)
  fga           Decimal? @db.Decimal(10, 3)
  fg_percent    Decimal? @db.Decimal(10, 3)
  threeP        Decimal? @db.Decimal(10, 3)
  threePA       Decimal? @db.Decimal(10, 3)
  three_percent Decimal? @db.Decimal(10, 3)
  twoP          Decimal? @db.Decimal(10, 3)
  twoPA         Decimal? @db.Decimal(10, 3)
  two_percent   Decimal? @db.Decimal(10, 3)
  ft            Decimal? @db.Decimal(10, 3)
  fta           Decimal? @db.Decimal(10, 3)
  ft_percent    Decimal? @db.Decimal(10, 3)
  orb           Decimal? @db.Decimal(10, 3)
  drb           Decimal? @db.Decimal(10, 3)
  trb           Decimal? @db.Decimal(10, 3)
  ast           Decimal? @db.Decimal(10, 3)
  stl           Decimal? @db.Decimal(10, 3)
  blk           Decimal? @db.Decimal(10, 3)
  tov           Decimal? @db.Decimal(10, 3)
  pf            Decimal? @db.Decimal(10, 3)
  pts           Decimal? @db.Decimal(10, 3)
  ortg          Int?
  drtg          Int?
  year          Int
  playoffs_s    String   @db.VarChar
  player        player   @relation(fields: [player_id], references: [player_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([player_id, tm, year, playoffs_s])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model player_stats_totals {
  player_id     Int
  player_name   String?
  pos           String?
  age           Int?
  tm            String
  games         Int?
  gs            Int?
  mp            Int?
  fg            Int?
  fga           Int?
  fg_percent    Decimal? @db.Decimal(10, 3)
  threeP        Int?
  threePA       Int?
  three_percent Decimal? @db.Decimal(10, 3)
  twoP          Int?
  twoPA         Int?
  two_percent   Decimal? @db.Decimal(10, 3)
  efg_percent   Decimal? @db.Decimal(10, 3)
  ft            Int?
  fta           Int?
  ft_percent    Decimal? @db.Decimal(10, 3)
  orb           Int?
  drb           Int?
  trb           Int?
  ast           Int?
  stl           Int?
  blk           Int?
  tov           Int?
  pf            Int?
  pts           Int?
  year          Int
  playoffs_s    String   @db.VarChar
  player        player   @relation(fields: [player_id], references: [player_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([player_id, tm, year, playoffs_s])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model team_selection {
  season                                     BigInt @default(autoincrement())
  lg                                         String
  tm                                         String
  players                                    String
  type                                       String
  player_one                                 Int
  player_two                                 Int
  player_three                               Int
  player_four                                Int
  player_five                                Int
  player_six                                 Int
  player_team_selection_player_fiveToplayer  player @relation("team_selection_player_fiveToplayer", fields: [player_five], references: [player_id], onDelete: NoAction, onUpdate: NoAction)
  player_team_selection_player_fourToplayer  player @relation("team_selection_player_fourToplayer", fields: [player_four], references: [player_id], onDelete: NoAction, onUpdate: NoAction)
  player_team_selection_player_oneToplayer   player @relation("team_selection_player_oneToplayer", fields: [player_one], references: [player_id], onDelete: NoAction, onUpdate: NoAction)
  player_team_selection_player_sixToplayer   player @relation("team_selection_player_sixToplayer", fields: [player_six], references: [player_id], onDelete: NoAction, onUpdate: NoAction)
  player_team_selection_player_threeToplayer player @relation("team_selection_player_threeToplayer", fields: [player_three], references: [player_id], onDelete: NoAction, onUpdate: NoAction)
  player_team_selection_player_twoToplayer   player @relation("team_selection_player_twoToplayer", fields: [player_two], references: [player_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([season, tm, type])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model teams {
  team_id             Int                   @id @default(autoincrement())
  franchise           String
  abbvreviation       String                @db.VarChar
  lg                  String
  from                Int
  to                  Int
  years               Int
  g                   Int
  w                   Int
  l                   Int
  wl_percentage       Decimal               @db.Decimal(10, 3)
  playoffs            Int
  division            Int
  conference          Int
  championship        Int
  championships       championships[]
  team_forecast       team_forecast?
  team_stats_per_game team_stats_per_game[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model championships {
  team_id  Int    @default(autoincrement())
  year     Int
  lg       String
  champion String
  teams    teams  @relation(fields: [team_id], references: [team_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([team_id, year])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model team_forecast {
  team_id            Int     @id
  team               String
  playoff_percentage Decimal @db.Decimal(10, 3)
  finals_percentage  Decimal @db.Decimal(10, 3)
  champ_percentage   Decimal @db.Decimal(10, 3)
  teams              teams   @relation(fields: [team_id], references: [team_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model team_stats_per_game {
  team_id           Int
  team              String?
  g                 Int?
  mp                Int?
  fg                Decimal? @db.Decimal(10, 3)
  fga               Decimal? @db.Decimal(10, 3)
  fg_percentage     Decimal? @db.Decimal(10, 3)
  threeP            Decimal? @db.Decimal(10, 3)
  threePA           Decimal? @db.Decimal(10, 3)
  threeP_percentage Decimal? @db.Decimal(10, 3)
  twoP              Decimal? @db.Decimal(10, 3)
  twoPA             Decimal? @db.Decimal(10, 3)
  twoP_percentage   Decimal? @db.Decimal(10, 3)
  ft                Decimal? @db.Decimal(10, 3)
  fta               Decimal? @db.Decimal(10, 3)
  ft_percentage     Decimal? @db.Decimal(10, 3)
  orb               Decimal? @db.Decimal(10, 3)
  drb               Decimal? @db.Decimal(10, 3)
  trb               Decimal? @db.Decimal(10, 3)
  ast               Decimal? @db.Decimal(10, 3)
  stl               Decimal? @db.Decimal(10, 3)
  blk               Decimal? @db.Decimal(10, 3)
  tov               Decimal? @db.Decimal(10, 3)
  pf                Decimal? @db.Decimal(10, 3)
  pts               Decimal? @db.Decimal(10, 3)
  year              Int
  playoffs          String?  @db.VarChar
  playoffs_s        String   @db.VarChar
  teams             teams    @relation(fields: [team_id], references: [team_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([team_id, year, playoffs_s])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model player_career_avg {
  player_id     Int
  games         Decimal? @db.Decimal(10, 3)
  gs            Decimal? @db.Decimal(10, 3)
  mp            Decimal? @db.Decimal(10, 3)
  fg            Decimal? @db.Decimal(10, 3)
  fg_percent    Decimal? @db.Decimal(10, 3)
  threePA       Decimal? @db.Decimal(10, 3)
  three_percent Decimal? @db.Decimal(10, 3)
  ft            Decimal? @db.Decimal(10, 3)
  ft_percent    Decimal? @db.Decimal(10, 3)
  orb           Decimal? @db.Decimal(10, 3)
  drb           Decimal? @db.Decimal(10, 3)
  trb           Decimal? @db.Decimal(10, 3)
  ast           Decimal? @db.Decimal(10, 3)
  stl           Decimal? @db.Decimal(10, 3)
  blk           Decimal? @db.Decimal(10, 3)
  tov           Decimal? @db.Decimal(10, 3)
  pf            Decimal? @db.Decimal(10, 3)
  pts           Decimal? @db.Decimal(10, 3)
  fga           Decimal? @db.Decimal(10, 3)
  threeP        Decimal? @db.Decimal(10, 3)
  twoP          Decimal? @db.Decimal(10, 3)
  twoPA         Decimal? @db.Decimal(10, 3)
  two_percent   Decimal? @db.Decimal(10, 3)
  eFG_percent   Decimal? @db.Decimal(10, 3)
  fta           Decimal? @db.Decimal(10, 3)
  playoffs_s    String   @db.VarChar
  player        player   @relation(fields: [player_id], references: [player_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([player_id, playoffs_s])
}
